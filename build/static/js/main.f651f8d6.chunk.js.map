{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","e","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","onClick","handleSortByChange","getSortByClass","renderSortByOptions","onChange","placeholder","href","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f651f8d6.chunk.js","sourcesContent":["import './Business.css';\r\nimport React from 'react';\r\n\r\nclass Business extends React.Component {\r\n  render(){\r\n    return (\r\n<div className=\"Business\">\r\n  <div className=\"image-container\">\r\n    <img src={this.props.business.imageSrc} alt=''/>\r\n  </div>\r\n  <h2>{this.props.business.name}</h2>\r\n  <div className=\"Business-information\">\r\n    <div className=\"Business-address\">\r\n      <p>{this.props.business.address}</p>\r\n      <p>{this.props.business.city}</p>\r\n      <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n    </div>\r\n    <div className=\"Business-reviews\">\r\n      <h3>{this.props.business.category}</h3>\r\n      <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n      <p>{this.props.business.reviewCount} reviews</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n    )\r\n  }\r\n}\r\nexport default Business;\r\n","import './BusinessList.css';\r\nimport React from 'react';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n  render(){\r\n    //  console.log(this.props.businesses);\r\n    return (\r\n\r\n      <div className=\"BusinessList\">\r\n          {\r\n            this.props.businesses.map(business=>{\r\n            return <Business business={business} key={business.id} />\r\n            })\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BusinessList;\r\n","import './SearchBar.css';\r\nimport React from 'react';\r\n\r\nconst sortByOptions={\r\n  'Best Match':'best_match',\r\n  'Highest Rated':'rating',\r\n  'Most Reviewed':'review_count'\r\n}\r\n\r\nclass SearchBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n     term:'' ,\r\n     location:'',\r\n     sortBy:'best_match'\r\n   };\r\n    this.handleTermChange=this.handleTermChange.bind(this);\r\n    this.handleLocationChange=this.handleLocationChange.bind(this);\r\n    this.handleSearch=this.handleSearch.bind(this);\r\n  }\r\n\r\n  getSortByClass(sortByOption){\r\n    if(sortByOption===this.state.sortBy){\r\n      return 'active';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  handleSortByChange(sortByOption){\r\n    this.setState({sortBy:sortByOption});\r\n  }\r\n\r\n  handleTermChange(e){\r\n    this.setState({term: e.target.value});\r\n  }\r\n\r\n  handleLocationChange(e){\r\n    this.setState({location: e.target.value});\r\n  }\r\n  handleSearch(e){\r\n    this.props.searchYelp(this.state.term,this.state.location,this.state.sortBy);\r\n    e.preventDefault();\r\n  }\r\n\r\n  renderSortByOptions(){\r\n    return Object.keys(sortByOptions).map(sortByOption=>{\r\n      let sortByOptionValue= sortByOptions[sortByOption];\r\n      return <li onClick={this.handleSortByChange.bind(this,sortByOptionValue)} key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)}>{sortByOption}</li>\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"SearchBar\">\r\n  <div className=\"SearchBar-sort-options\">\r\n    <ul>\r\n      {this.renderSortByOptions()}\r\n    </ul>\r\n  </div>\r\n  <div className=\"SearchBar-fields\">\r\n    <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n    <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\r\n  </div>\r\n  <div onClick={this.handleSearch} className=\"SearchBar-submit\">\r\n    <a href=\"www.#.com\">Let's Go</a>\r\n  </div>\r\n</div>\r\n    )\r\n  }\r\n}\r\nexport default SearchBar;\r\n","const apiKey='0xvzF-j1x1Ffm1oETdOBPmT-czU8JaTVAHNPDpXSHtLuRiJMNnpHRth52H3zHYjylhDfHsUGypDNspo4Ywer11s0nK8UNOixEnE2rjlQE5KHdsvvgDi4iEcEp8aRXHYx';\r\n  const Yelp={\r\n  search(term,location,sortBy){\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,{\r\n      headers:{\r\n        Authorization: `Bearer ${apiKey}`,\r\n      },\r\n    }).then((response) => {\r\n      //console.log(response);\r\n      return response.json();\r\n    }).then((jsonResponse)=>{\r\n      console.log(jsonResponse);\r\n      if(jsonResponse.businesses){\r\n        return jsonResponse.businesses.map(business=>{\r\n          //console.log(business);\r\n            return {\r\n              id:business.id,\r\n              imageSrc:business.image_url,\r\n              name:business.name,\r\n              address:business.location.address1,\r\n              city:business.location.city,\r\n              state:business.location.state,\r\n              zipCode:business.location.zip_code,\r\n              category:business.categories[0].title,\r\n              rating:business.rating,\r\n              reviewCount:business.review_count\r\n            };\r\n          });\r\n        }\r\n      })\r\n    }\r\n};\r\nexport default Yelp;\r\n","import React from 'react';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList'\nimport SearchBar from './components/SearchBar/SearchBar'\nimport Yelp from './util/Yelp'\n//const business = {}\n\n//const businesses = [business,business, business,business,business,business];\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      businesses:[]\n    };\n    this.searchYelp=this.searchYelp.bind(this);\n  }\n  searchYelp(term,location,sortBy){\n    Yelp.search(term,location,sortBy).then(businesses=>{\n      console.log(businesses);\n      this.setState({businesses:businesses});\n    });\n    //console.log(`Searching Yelp with ${term} , ${location} , ${sortBy} `)\n  }\n  render() {\n    //console.log(this.state.businesses);\n    return (\n      <div className=\"App\">\n  <h1>Find Your Food..!</h1>\n  <SearchBar searchYelp={this.searchYelp}/>\n  <BusinessList businesses={this.state.businesses}/>\n</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}